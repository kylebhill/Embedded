This lab I wrote a code to change the brightness of a LED based on a value read from EEPROM memory. So, whenever the device ran a new instance of the program the brightness was changed. Most of the program treads old ground using timers and interrupts to manipulate the LED after reading the value from EEPROM. The new part of this lad was using EEPROM to change the duty cycle then preparing EEPROM for the next instance. Reading and writing from EEPROM was facilitated by avr/eeprom.h and I would cycle the brightness by using %11 on the value read from EEPROM. The main issue to solve is setting the initial value of EEPROM on the first instance of running the code. To do this I created a second main function which I currently have commented out. I would run this program, with the actual main code commented out, before running the actual main code. My code works well, and I currently have no issues. I initially had an issue with 100% brightness, but I fixed that by adding a specific case for it.
